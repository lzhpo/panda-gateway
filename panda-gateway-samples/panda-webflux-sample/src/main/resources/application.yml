spring:
  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456
    database: 2

gateway:
  discovery: true
  redis:
    enabled: true
    route-locator: true
  http-client:
    # http client connect timeout, default 60s
    connect-timeout: 60s
    # http client response timeout, default 60s
    response-timeout: 60s
  cross-configurations:
    '[/**]':
      maxAge: 10
      allowedOrigins: "*"
      allowedMethods:
        - GET
  routes:
    - id: panda-service-sample-01
      # uri: http://localhost:9000
      uri: lb://panda-service-sample
      order: 1
      metadata:
        # choose one: ["or", "and"], default is "and"
        predicate-relation: and
        # http client connect timeout, unit: millisecond
        connect-timeout: 5000
        # http client response timeout, unit: millisecond
        response-timeout: 5000
      predicates:
        - name: Path
          args:
            paths: /api/service-sample/**, /api/sample/**
        - name: Cookie
          args:
            cookies:
              deviceId: 123456
        - name: Header
          args:
            headers:
              X-B3-TraceId: 123456
        - name: Method
          args:
            methods: PUT, PATCH
        - name: Parameter
          args:
            parameters:
              nickName: Lewis
        - name: ClientIp
          args:
            clientIps: 192.168.200.111, 192.168.200.112
        - name: Between
          args:
            times:
              - start: 2012-06-30T01:29:48.0875598+08:00[Asia/Shanghai]
                end: 2018-06-30T01:29:48.0875598+08:00[Asia/Shanghai]
              - start: 2020-10-01T01:29:48.0875598+08:00[Asia/Shanghai]
                end: 2030-10-01T01:29:48.0875598+08:00[Asia/Shanghai]
        - name: Before
          args:
            time: 2015-06-30T01:29:48.0875598+08:00[Asia/Shanghai]
        - name: After
          args:
            time: 2030-06-30T01:29:48.0875598+08:00[Asia/Shanghai]
        - name: Weight
          args:
            group: service-sample
            weight: 8
      filters:
        - name: StripPrefix
          args:
            parts: 2
        - name: AddRequestHeader
          args:
            headers:
              name: Lewis
              age: 123
        - name: RemoveRequestHeader
          args:
            headers:
              X-B3-TraceId: 123
              X-B3-SpanId: 456
        - name: AddResponseHeader
          args:
            headers:
              name: Jack
              age: 20
        - name: RemoveResponseHeader
          args:
            headers:
              country: China
              city: Guangzhou
        - name: AddRequestParameter
          args:
            parameters:
              userId: 123
        - name: RemoveRequestParameter
          args:
            parameters:
              traceId: 123
              spanId: 456
        - name: RateLimiter
          args:
            includeHeaders: true
            replenishRate: 1
            burstCapacity: 1
            requestedTokens: 1
            limitedCode: 429
            limitedMessage: "Request too frequent"
            keyResolver: "#{@clientIpKeyResolver}"
            rateLimiter: "#{@redisRateLimiter}"
    - id: panda-service-sample-02
      # uri: http://localhost:9000
      uri: lb://panda-service-sample
      order: 2
      metadata:
        # choose one: ["or", "and"], default is "and"
        predicate-relation: and
        # http client connect timeout, unit: millisecond
        connect-timeout: 5000
        # http client response timeout, unit: millisecond
        response-timeout: 5000
      predicates:
        - name: Path
          args:
            paths: /api/service-sample/**, /api/sample/**
        - name: Weight
          args:
            group: service-sample
            weight: 2
      filters:
        - name: StripPrefix
          args:
            parts: 2

management:
  endpoints:
    web:
      exposure:
        include: health, gateway
